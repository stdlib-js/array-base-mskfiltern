{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolveGetter = require( '@stdlib/array-base-resolve-getter' );\n\n\n// MAIN //\n\n/**\n* Returns new arrays by applying a mask to one or more provided input arrays in a single pass.\n*\n* @param {Collection} x - first input array\n* @param {Collection} [...arrays] - additional input arrays\n* @param {Collection} mask - mask array\n* @returns {Array<Array>} output arrays\n*\n* @example\n* var x = [ 1, 2, 3, 4 ];\n* var y = [ 5, 6, 7, 8 ];\n* var mask = [ 0, 1, 0, 1 ];\n*\n* var out = mskfiltern( x, y, mask );\n* // returns [ [ 2, 4 ], [ 6, 8 ] ]\n*/\nfunction mskfiltern() {\n\tvar getters;\n\tvar arrays;\n\tvar nargs;\n\tvar mget;\n\tvar mask;\n\tvar out;\n\tvar i;\n\tvar j;\n\n\tnargs = arguments.length;\n\tnargs -= 1;\n\n\t// Resolve the mask array and its associated accessor:\n\tmask = arguments[ nargs ];\n\tmget = resolveGetter( mask );\n\n\t// Resolve accessors for retrieving array elements and initialize the output arrays...\n\tgetters = [];\n\tarrays = [];\n\tout = [];\n\tfor ( i = 0; i < nargs; i++ ) {\n\t\tarrays.push( arguments[ i ] );\n\t\tgetters.push( resolveGetter( arrays[ i ] ) );\n\t\tout.push( [] );\n\t}\n\t// Extract each desired element from the provided arrays...\n\tfor ( i = 0; i < mask.length; i++ ) {\n\t\tif ( mget( mask, i ) ) {\n\t\t\tfor ( j = 0; j < nargs; j++ ) {\n\t\t\t\tout[ j ].push( getters[ j ]( arrays[ j ], i ) ); // use `Array#push` to ensure \"fast\" elements\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = mskfiltern;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Apply a mask to one or more provided input arrays in a single pass.\n*\n* @module @stdlib/array-base-mskfiltern\n*\n* @example\n* var mskfiltern = require( '@stdlib/array-base-mskfiltern' );\n*\n* var x = [ 1, 2, 3, 4 ];\n* var y = [ 5, 6, 7, 8 ];\n* var mask = [ 0, 1, 0, 1 ];\n*\n* var out = mskfiltern( x, y, mask );\n* // returns [ [ 2, 4 ], [ 6, 8 ] ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,mCAAoC,EAqBjE,SAASC,GAAa,CACrB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAaJ,IAXAL,EAAQ,UAAU,OAClBA,GAAS,EAGTE,EAAO,UAAWF,CAAM,EACxBC,EAAOL,EAAeM,CAAK,EAG3BJ,EAAU,CAAC,EACXC,EAAS,CAAC,EACVI,EAAM,CAAC,EACDC,EAAI,EAAGA,EAAIJ,EAAOI,IACvBL,EAAO,KAAM,UAAWK,CAAE,CAAE,EAC5BN,EAAQ,KAAMF,EAAeG,EAAQK,CAAE,CAAE,CAAE,EAC3CD,EAAI,KAAM,CAAC,CAAE,EAGd,IAAMC,EAAI,EAAGA,EAAIF,EAAK,OAAQE,IAC7B,GAAKH,EAAMC,EAAME,CAAE,EAClB,IAAMC,EAAI,EAAGA,EAAIL,EAAOK,IACvBF,EAAKE,CAAE,EAAE,KAAMP,EAASO,CAAE,EAAGN,EAAQM,CAAE,EAAGD,CAAE,CAAE,EAIjD,OAAOD,CACR,CAKAR,EAAO,QAAUE,IC7CjB,IAAIS,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "resolveGetter", "mskfiltern", "getters", "arrays", "nargs", "mget", "mask", "out", "i", "j", "main"]
}
